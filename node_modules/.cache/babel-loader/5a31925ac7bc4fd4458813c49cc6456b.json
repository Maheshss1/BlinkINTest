{"ast":null,"code":"var _jsxFileName = \"E:\\\\tanmay\\\\Downloads\\\\BlinkINAssignment-master\\\\BlinkINAssignment-master\\\\src\\\\container\\\\Todo\\\\Todo.js\";\nimport React from \"react\"; //import Item from '../../component/Item/Item'\n\nclass Todo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoList: JSON.parse(localStorage.getItem(\"todoList\")) || [],\n      inputValue: \"\",\n      sorted: false\n    };\n\n    this.changeInput = event => {\n      if (event.target.value.trim().length === 0) return;\n      this.setState({\n        inputValue: event.target.value\n      });\n    };\n\n    this.handleForm = (e, todoList) => {\n      e.preventDefault(); //const todoList = [...this.state.todoList];\n\n      todoList.push({\n        key: Date.now(),\n        todo: this.state.inputValue,\n        marked: false\n      });\n      localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n      this.setState({\n        todoList: todoList,\n        inputValue: \"\"\n      });\n    };\n\n    this.markCompleted = (todo, newList) => {\n      //const newList = [...this.state.todoList];\n      const list = newList.map(t => {\n        if (todo.key === t.key) {\n          t.marked = true;\n        }\n\n        return t;\n      });\n      localStorage.setItem(\"todoList\", JSON.stringify(list));\n      this.setState({\n        todoList: list\n      });\n    };\n\n    this.sortTodoList = (sorted, newList) => {\n      //const sorted = this.state.sorted;\n      //let newList = [...this.state.todoList];\n      if (sorted) {\n        newList = newList.sort((a, b) => {\n          if (a.todo < b.todo) return -1;\n          return 0;\n        });\n      } else {\n        newList = newList.sort((a, b) => {\n          if (a.todo > b.todo) return -1;\n          return 0;\n        });\n      }\n\n      localStorage.setItem(\"todoList\", JSON.stringify(newList));\n      this.setState(prevState => {\n        return {\n          sorted: !prevState.sorted,\n          todoList: newList\n        };\n      });\n    };\n  }\n\n  render() {\n    const list = this.state.todoList.map(todo => {\n      return React.createElement(\"li\", {\n        key: todo.key,\n        style: {\n          cursor: \"pointer\",\n          listStyle: \"none\",\n          textDecoration: todo.marked ? \"line-through\" : null\n        },\n        onClick: () => this.markCompleted(todo, [...this.state.todoList]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, todo.todo);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handleForm(e, [...this.state.todoList]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputValue,\n      onChange: e => {\n        this.changeInput(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: () => {\n        this.sortTodoList(this.state.sorted, [...this.state.todoList]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.sorted ? \"Asc\" : \"Desc\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, list));\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["E:/tanmay/Downloads/BlinkINAssignment-master/BlinkINAssignment-master/src/container/Todo/Todo.js"],"names":["React","Todo","Component","state","todoList","JSON","parse","localStorage","getItem","inputValue","sorted","changeInput","event","target","value","trim","length","setState","handleForm","e","preventDefault","push","key","Date","now","todo","marked","setItem","stringify","markCompleted","newList","list","map","t","sortTodoList","sort","a","b","prevState","render","cursor","listStyle","textDecoration"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import Item from '../../component/Item/Item'\n\nclass Todo extends React.Component {\n  state = {\n    todoList: JSON.parse(localStorage.getItem(\"todoList\")) || [],\n    inputValue: \"\",\n    sorted: false\n  };\n\n  changeInput = event => {\n    if (event.target.value.trim().length === 0) return;\n\n    this.setState({\n      inputValue: event.target.value\n    });\n  };\n\n  handleForm = (e, todoList) => {\n    e.preventDefault();\n    //const todoList = [...this.state.todoList];\n    todoList.push({\n      key: Date.now(),\n      todo: this.state.inputValue,\n      marked: false\n    });\n    localStorage.setItem(\"todoList\", JSON.stringify(todoList));\n    this.setState({\n      todoList: todoList,\n      inputValue: \"\"\n    });\n  };\n\n  markCompleted = (todo, newList) => {\n    //const newList = [...this.state.todoList];\n    const list = newList.map(t => {\n      if (todo.key === t.key) {\n        t.marked = true;\n      }\n      return t;\n    });\n    localStorage.setItem(\"todoList\", JSON.stringify(list));\n\n    this.setState({\n      todoList: list\n    });\n  };\n\n  sortTodoList = (sorted, newList) => {\n    //const sorted = this.state.sorted;\n    //let newList = [...this.state.todoList];\n    if (sorted) {\n      newList = newList.sort((a, b) => {\n        if (a.todo < b.todo) return -1;\n        return 0;\n      });\n    } else {\n      newList = newList.sort((a, b) => {\n        if (a.todo > b.todo) return -1;\n        return 0;\n      });\n    }\n    localStorage.setItem(\"todoList\", JSON.stringify(newList));\n\n    this.setState(prevState => {\n      return {\n        sorted: !prevState.sorted,\n        todoList: newList\n      };\n    });\n  };\n\n  render() {\n    const list = this.state.todoList.map(todo => {\n      return (\n        <li\n          key={todo.key}\n          style={{\n            cursor: \"pointer\",\n            listStyle: \"none\",\n            textDecoration: todo.marked ? \"line-through\" : null\n          }}\n          onClick={() => this.markCompleted(todo, [...this.state.todoList])}\n        >\n          {todo.todo}\n        </li>\n      );\n    });\n\n    return (\n      <div>\n        <form onSubmit={e => this.handleForm(e, [...this.state.todoList])}>\n          <input\n            type=\"text\"\n            value={this.state.inputValue}\n            onChange={e => {\n              this.changeInput(e);\n            }}\n          />\n          <input type=\"submit\" />\n        </form>\n        <button\n          onClick={() => {\n            this.sortTodoList(this.state.sorted, [...this.state.todoList]);\n          }}\n        >\n          {this.state.sorted ? \"Asc\" : \"Desc\"}\n        </button>\n        <ul>{list}</ul>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}